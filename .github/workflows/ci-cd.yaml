name: Alpha Platform CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  # Render.com API Key for deployments
  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

jobs:
  # Run tests and linting
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - agent-service
          - prompt-service
          - memory-service
          - tools-service
          - api-gateway
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        if: ${{ matrix.service == 'agent-service' || matrix.service == 'prompt-service' || matrix.service == 'dashboard' }}
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.service }}/package-lock.json
      
      - name: Set up Python
        if: ${{ matrix.service == 'memory-service' || matrix.service == 'tools-service' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: ${{ matrix.service }}/requirements.txt
      
      - name: Install dependencies (Node.js)
        if: ${{ matrix.service == 'agent-service' || matrix.service == 'prompt-service' || matrix.service == 'dashboard' }}
        working-directory: ${{ matrix.service }}
        run: |
          # Install build dependencies for sqlite3
          if [[ "${{ matrix.service }}" == "agent-service" || "${{ matrix.service }}" == "prompt-service" ]]; then
            sudo apt-get update
            sudo apt-get install -y python3 build-essential
            # Use npm install for services using sqlite3 to ensure package-lock.json is updated
            npm install
          else
            # Use npm ci for other services
            npm ci
          fi
      
      - name: Install dependencies (Python)
        if: ${{ matrix.service == 'memory-service' || matrix.service == 'tools-service' }}
        working-directory: ${{ matrix.service }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8
      
      - name: Run linting (Node.js)
        if: ${{ matrix.service == 'agent-service' || matrix.service == 'prompt-service' || matrix.service == 'dashboard' }}
        working-directory: ${{ matrix.service }}
        run: npm run lint
      
      - name: Run linting (Python)
        if: ${{ matrix.service == 'memory-service' || matrix.service == 'tools-service' }}
        working-directory: ${{ matrix.service }}
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      
      - name: Run tests (Node.js)
        if: ${{ matrix.service == 'agent-service' || matrix.service == 'prompt-service' || matrix.service == 'dashboard' }}
        working-directory: ${{ matrix.service }}
        run: npm test
      
      - name: Run tests (Python)
        if: ${{ matrix.service == 'memory-service' || matrix.service == 'tools-service' }}
        working-directory: ${{ matrix.service }}
        run: pytest

  # Deploy to manually configured Render.com services
  # IMPORTANT: Replace the placeholder service_id values below with your actual Render.com service IDs
  # You can find your service IDs in the Render.com dashboard URL when viewing a service
  # Format: https://dashboard.render.com/web/srv-abc123 (srv-abc123 is the service ID)
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - service: agent-service
            service_id: srv-d0q9lc95pdvs73adl5kg  # Replace with your actual Render service ID
          - service: prompt-service
            service_id: srv-d0q9nfjipnbc73e675n0  # Replace with your actual Render service ID
          - service: memory-service
            service_id: srv-d0q9p00dl3ps73eorhkg  # Replace with your actual Render service ID
          - service: tools-service
            service_id: srv-d0q9qbumcj7s73drfdv0  # Replace with your actual Render service ID
          - service: api-gateway
            service_id: srv-d0q9k3emcj7s73dr7t4g  # Replace with your actual Render service ID
    steps:
      - name: Deploy to Render.com
        if: env.RENDER_API_KEY != ''
        run: |
          echo "Deploying ${{ matrix.service }} to Render.com..."
          
          # Make API call to Render to trigger a deploy
          DEPLOY_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ env.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/${{ matrix.service_id }}/deploys" \
            -d '{"clearCache": true}')
          
          # Check if the API call was successful
          if [[ "$DEPLOY_RESPONSE" == *"id"* ]]; then
            echo "✅ Successfully triggered deployment for ${{ matrix.service }}"
            echo "Response: $DEPLOY_RESPONSE"
          else
            echo "❌ Failed to trigger deployment for ${{ matrix.service }}"
            echo "Response: $DEPLOY_RESPONSE"
            exit 1
          fi
      
      - name: Notification (No API Key)
        if: env.RENDER_API_KEY == ''
        run: |
          echo "⚠️ RENDER_API_KEY is not set. Unable to trigger automatic deployments."
          echo "Please add your Render API key as a GitHub secret named RENDER_API_KEY."
          echo "Alternatively, manually deploy your services from the Render dashboard."
